#!/usr/bin/perl

use strict;
use warnings;

use IO::File;

our @scancodes = ( [], [] );
our %keycodes;

for (my $i = 0 ; $i < 256 ; ++$i) {
    $scancodes[0]->[$i] = $scancodes[1]->[$i] = 'x';
}

# Read the scan codes
my $in    = IO::File->new("scan_codes.h", "r");
my $table = 0;

while(my $line = <$in>) {
    if ($line =~ /Extended/) {
        $table = 1;
    } elsif ($line =~ /^#define\s+(SC_(\w+))\s+(0x[a-zA-Z0-9]{2})/) {
        $scancodes[$table]->[hex($3)] = $2;
    }
}

$in->close();

# Read the key codes
$in = IO::File->new("../firmware/include/sys/key_codes.s", "r");

while(my $line = <$in>) {
    if ($line =~ /^(KEY_(\w+))\s+=\s+\$([a-zA-Z0-9]{2})/) {
        $keycodes{$2} = $3;
    }
}

$in->close();

# Write our key_codes.h header
my $out = IO::File->new("key_codes.h", "w");

foreach my $code (sort keys %keycodes) {
    my $hex = $keycodes{$code};

    $out->print("#define KEY_$code 0x$hex\n");
}

$out->close();

# Now iterate through all of @scancodes, and generate a mapping array

$out = IO::File->new("key_map.h", "w");

$out->print("/* Auto-generated by genmap.pl */\n\n#include <avr/pgmspace.h>\n\nconst uint8_t scancode_map[2][256] PROGMEM = {\n");

print_table($out, $scancodes[0]);
$out->print(",\n");
print_table($out, $scancodes[1]);
$out->print("\n};\n");

sub print_table {
    my ($fh, $codes) = @_;

    $fh->print("    {\n");
    
    foreach my $sc (@{$codes}) {
        my $kc = exists $keycodes{$sc}? 'KEY_' . $sc : '255';

        $fh->print("        $kc,\n");
    }

    $fh->print("    }");
}
